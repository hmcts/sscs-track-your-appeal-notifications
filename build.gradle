plugins {
    id 'application'
    id 'checkstyle'
    id 'pmd'
    id 'org.sonarqube' version '3.3'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.springframework.boot' version '2.5.6'
    id 'uk.gov.hmcts.java' version '0.12.32'
    id 'org.owasp.dependencycheck' version '7.2.1'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id "org.flywaydb.flyway" version '7.15.0'
    id "info.solidsoft.pitest" version '1.7.0'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'uk.gov.hmcts.reform'
version = '1.0.0'

sourceCompatibility = 11
targetCompatibility = 11

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation'
}

mainClassName = 'uk.gov.hmcts.reform.sscs.TrackYourAppealNotificationsApplication'

pmd {
    toolVersion = "6.5.0"
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all {
            def isNonStable = { String version ->
                def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
                def regex = /^[0-9,.v-]+(-r)?$/
                return !stableKeyword && !(version ==~ regex)
            }
            if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
                selection.reject('Release candidate')
            }
        }
    }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 7-10 fails the build, anything lower and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild', 'true') == 'true' ? 7.0 : 11
    suppressionFile = 'dependency-check-suppressions.xml'

    cveValidForHours = 24

    analyzers {
        retirejs {
            enabled = false
        }
        ossIndex {
            enabled = false
        }
    }
}

pitest {
    targetClasses = ['uk.gov.hmcts.reform.sscs.service.*']
    excludedClasses = ['uk.gov.hmcts.reform.sscs.config.*',
                       'uk.gov.hmcts.reform.sscs.domain.*',
                       'uk.gov.hmcts.reform.sscs.exception.*',
                       'uk.gov.hmcts.reform.sscs.factory.*',
                       'uk.gov.hmcts.reform.sscs.health.*',
                       'uk.gov.hmcts.reform.sscs.TrackYourAppealNotificationsApplication']
    excludedMethods = ['equals', 'hashcode']
    jvmArgs = ['-Xms1G','-Xmx3G']
    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
    threads = 20
    verbose = true
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 75
}

sonarqube {
    properties {
        property "sonar.projectName", "SSCS - Track Your Appeal Notifications"
        property "sonar.projectKey", "SSCSTYANS"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/sscs/domain/**," +
                "src/main/java/uk/gov/hmcts/reform/sscs/TrackYourAppealNotificationsApplication.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/servicebus/messaging/**," +
                "src/main/java/uk/gov/hmcts/reform/sscs/config/**," +
                "src/main/java/uk/gov/hmcts/reform/sscs/utils/GetAllTemplatesFromNotify.java,"
        property "sonar.host.url", "https://sonar.reform.hmcts.net/"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

bootRun {
    systemProperty 'server.port', '8081'
}

ext {
    springCloudVersion = '2020.0.6'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
    dependencies {
        // Solves CVE-2019-10086
        dependency group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
        dependency group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.16.0'
        dependency group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'

        // resolves: CVE-2020-9489
        dependency group: 'org.apache.tika', name: 'tika-core', version: '2.4.1'

        //CVE-2021-40690
        dependency group: 'org.apache.santuario', name: 'xmlsec', version: '2.3.0'

        // checkstyle needs a certain version and so does spring fox swagger, so can't use latest
        dependencySet(group: 'com.google.guava', version: '31.0.1-jre') {
            entry 'guava'
        }

        // CVE-2020-13954
        dependencySet(group: 'org.apache.cxf', version: '3.5.0') {
            entry 'cxf-core'
            entry 'cxf-rt-frontend-jaxrs'
            entry 'cxf-rt-rs-client'
            entry 'cxf-rt-security'
            entry 'cxf-rt-transports-http'
        }

        dependencySet(group: 'org.apache.xmlgraphics', version: '1.14') {
            entry 'batik-all'
        }

        dependencySet(group: 'org.apache.commons', version: '1.21') {
            entry 'commons-compress'
        }

        // CVE-2019-16869 - brought in by qpid-jms-client
        dependencySet(group: 'io.netty', version: '4.1.79.Final') {
            entry 'netty-handler'
            entry 'netty-transport-native-epoll'
            entry 'netty-transport-native-kqueue'
            entry 'netty-codec-http'
            entry 'netty-codec'
            entry 'netty-transport-native-unix-common'
            entry 'netty-transport'
            entry 'netty-buffer'
            entry 'netty-resolver'
            entry 'netty-common'
        }

        // solves CVE-2019-13990
        dependencySet(
                group: 'org.quartz-scheduler',
                version: '2.3.2'
        ) {
            entry 'quartz'
        }

        // resolves: CVE-2019-10101, CVE-2019-10102, CVE-2019-10103
        dependencySet(group: 'org.jetbrains.kotlin', version: '1.6.10') {
            entry 'kotlin-stdlib'
            entry 'kotlin-stdlib-common'
        }

        //CVE-2021-22112
        dependencySet(group: 'org.springframework.security', version: '5.5.3') {
            entry 'spring-security-crypto'
        }

        //CVE-2021-27807
        dependencySet(group: 'org.apache.pdfbox', version: '2.0.25') {
            entry 'pdfbox'
            entry 'pdfbox-tools'
            entry 'preflight'
            entry 'xmpbox'
        }

        //CVE-2021-22118, CVE-2022-22970, CVE-2022-22971
        dependencySet(group: 'org.springframework', version: '5.3.20') {
            entry 'spring-aop'
            entry 'spring-aspects'
            entry 'spring-beans'
            entry 'spring-context'
            entry 'spring-context-support'
            entry 'spring-core'
            entry 'spring-expression'
            entry 'spring-jcl'
            entry 'spring-jdbc'
            entry 'spring-jms'
            entry 'spring-messaging'
            entry 'spring-orm'
            entry 'spring-test'
            entry 'spring-tx'
            entry 'spring-web'
            entry 'spring-webmvc'
        }

        //CVE-2021-27568
        dependencySet(group: 'net.minidev', version: '2.4.7') {
            entry 'json-smart'
            entry 'accessors-smart'
        }

        //CVE-2021-35515, CVE-2021-35516, CVE-2021-35517, CVE-2021-36090
        dependencySet(group: 'org.apache.commons', version: '1.21') {
            entry 'commons-compress'
        }

        dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.65') {
            entry 'tomcat-embed-core'
            entry 'tomcat-embed-websocket'
        }

        //CVE-2021-22044
        dependencySet(group: 'org.springframework.cloud', version: '3.0.5') {
            entry 'spring-cloud-starter-openfeign'
            entry 'spring-cloud-openfeign-core'
        }

        //CVE-2022-25857, CVE-2022-38751
        dependencySet(group: 'org.yaml', version: '1.33') {
            entry 'snakeyaml'
        }

        //CVE-2021-40690
        dependency group: 'org.apache.santuario', name: 'xmlsec', version: '2.3.0'
        dependency group: 'org.glassfish', name: 'jakarta.el', version: '4.0.2'

        dependencySet(group: 'ch.qos.logback', version: '1.2.11') {
            entry 'logback-core'
            entry 'logback-classic'
        }
    }

}

repositories {

    mavenLocal()

    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir('src/IntegrationTests/java')
        }
    }
    e2e {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir('src/e2e/java')
        }
        resources {
            srcDir('src/e2e/resources')
        }
    }

}

task integration(type: Test) {
    group = 'verification'
    setTestClassesDirs(sourceSets.integrationTest.output.classesDirs)
    setClasspath(sourceSets.integrationTest.runtimeClasspath)
}

task smoke(type: Test) {
    group = 'verification'
    description = 'Executes non-destructive smoke tests against a running CCD and notification service'
    setTestClassesDirs(sourceSets.e2e.output.classesDirs)
    setClasspath(sourceSets.e2e.runtimeClasspath)
    include "uk/gov/hmcts/reform/sscs/smoke/**"
    exclude "uk/gov/hmcts/reform/sscs/functional/**"
}

task functional(type: Test) {
    group = 'verification'
    description = 'Executes non-destructive functional tests in AAT against a running CCD and notification service'
    setTestClassesDirs(sourceSets.e2e.output.classesDirs)
    setClasspath(sourceSets.e2e.runtimeClasspath)
    include "uk/gov/hmcts/reform/sscs/functional/**"
    exclude("uk/gov/hmcts/reform/sscs/smoke/**", "**/*CohNotificationFunctionalTest*")
}

task fortifyScan(type: JavaExec)  {
    main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

configurations {
    integrationTestImplementation.extendsFrom(testImplementation)
    integrationTestRuntimeOnly.extendsFrom(testRuntimeOnly)
    e2eImplementation.extendsFrom(testImplementation)
    e2eRuntimeOnly.extendsFrom(testRuntimeOnly)
}

jacocoTestReport {
    executionData(test, integration)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

tasks.withType(Copy).all { duplicatesStrategy 'warn' }

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
check.dependsOn integration
checkstyleMain.shouldRunAfter(compileJava)
test.shouldRunAfter(checkstyleTest)
integration.shouldRunAfter(checkstyleIntegrationTest)
integration.shouldRunAfter(test)
functional.shouldRunAfter(checkstyleIntegrationTest)
functional.shouldRunAfter(test)

configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group in ['com.fasterxml.jackson.core', 'com.fasterxml.jackson.module', 'com.fasterxml.jackson.datatype']) {
                details.useVersion '2.11.0'
            }
            if (details.requested.group == 'org.codehaus.groovy') {
                details.useVersion "3.0.7"
                details.because "needed by rest-assured>=4.3"
            }
        }
    }
}

dependencies {
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

    implementation group: 'com.mchange', name: 'c3p0', version: '0.9.5.5'
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '7.15.0'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.4.1'
    implementation group: 'net.bytebuddy', name: 'byte-buddy', version: '1.12.6'
    implementation group: 'org.elasticsearch', name: 'elasticsearch', version: '7.17.7'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.10.RELEASE'
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: '1.3.3'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.12'
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '4.3.3'
    implementation group: 'io.rest-assured', name: 'json-path', version: '4.3.3'
    implementation group: 'io.rest-assured', name: 'xml-path', version: '4.3.3'

    implementation group: 'com.atlassian.commonmark', name: 'commonmark', version: '0.17.0'
    implementation group: 'org.springframework', name: 'spring-jms'
    implementation group: 'org.apache.qpid', name: 'qpid-jms-client', version: '1.3.0'
    implementation group: 'org.jadira.usertype', name: 'usertype.core', version: '7.0.0.CR1'

    implementation group: 'com.github.hmcts', name: 'properties-volume-spring-boot-starter', version: '0.1.1'
    implementation group: 'com.github.hmcts', name: 'java-logging', version: '5.1.7'
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '4.1.1'
    implementation group: 'com.github.hmcts', name: 'ccd-client', version: '4.9.1'

    implementation group: 'com.github.hmcts', name: 'cmc-pdf-service-client', version: '7.0.1'

    implementation group: 'com.github.hmcts', name: 'sscs-common', version: '4.20.2'
    implementation group: 'com.github.hmcts', name: 'sscs-pdf-email-common', version: '1.6.0'

    implementation group: 'com.github.hmcts', name: 'sscs-job-scheduler', version: '1.5.7', {
        exclude group: "uk.gov.hmcts.reform", module:"properties-volume-spring-boot-starter"
    }

    implementation group: 'uk.gov.service.notify', name: 'notifications-java-client', version: '3.19.0-RELEASE'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.2'
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
    implementation group: 'io.github.openfeign.form', name: 'feign-form', version: '3.8.0'

    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.24'

    implementation group: 'com.microsoft.azure', name: 'applicationinsights-logging-logback', version: '2.6.3'
    implementation group: 'com.microsoft.azure', name: 'applicationinsights-spring-boot-starter', version: '2.6.3'

    implementation group: 'org.pitest', name: 'pitest', version: '1.4.2'
    implementation group:'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: '1.3.0'
    implementation group:'org.codehaus.sonar-plugins', name:'sonar-pitest-plugin', version: '0.5'

    implementation group: 'org.springframework.boot', name: 'spring-boot-devtools'

    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.24'

    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    testImplementation group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    integrationTestImplementation group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.24'

    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.6.2') {
        exclude group: "com.vaadin.external.google", module:"android-json"
    }
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.2.0'
    testImplementation 'pl.pragmatists:JUnitParams:1.1.1'
    testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.2.2', classifier: 'all', {
        exclude group: 'commons-io', module: 'commons-io'
    }

    integrationTestImplementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

    runtimeOnly group: 'org.springframework.boot', name: 'spring-boot-properties-migrator'
}

bootJar {
    archiveName 'track-your-appeal-notifications.jar'
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version
    }
}

// this is required to force Java running on the Azure Windows Server OS into using
// UTF-8 as the default character set instead of windows-1252 which causes issues
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]

run {
    def debug = System.getProperty("debug")
    if (debug == 'true') {
        jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5006']
    }
}

def dbHost = System.env.JOB_SCHEDULER_DB_HOST ?: "localhost"
def dbPort = System.env.JOB_SCHEDULER_DB_PORT ?: 5432
def dbName = System.env.JOB_SCHEDULER_DB_NAME ?: "sscsjobscheduler"
def dbUser = System.env.JOB_SCHEDULER_DB_USERNAME ?: "sscsjobscheduler"
def dbPass = System.env.JOB_SCHEDULER_DB_PASSWORD ?: "sscsjobscheduler"

flyway {
    url = 'jdbc:postgresql://' + dbHost + ':' + dbPort + '/' + dbName
    user = dbUser
    password = dbPass
}
